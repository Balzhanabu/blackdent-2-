from sqlalchemy.orm import Session
from app.models.user import User
from app.schemas.user import UserCreate, UserUpdate, UpdateUserRole
from app.core.security import get_password_hash


# üëâ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def create_user(db: Session, user: UserCreate):
    db_user = User(
        email=user.email,
        username=user.email,  # –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π username, –µ—Å–ª–∏ –µ—Å—Ç—å
        full_name=user.full_name,
        clinic_name=user.clinic_name,
        role=user.role,
        hashed_password=get_password_hash(user.password),
    )
    db.add(db_user)
    db.commit()
    db.refresh(db_user)
    return db_user


# üëâ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
def get_user(db: Session, email: str):
    return db.query(User).filter(User.email == email).first()


# üëâ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def get_all_users(db: Session):
    return db.query(User).all()


# üëâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –∏–ª–∏ –∏–º–µ–Ω–∏)
def update_user(db: Session, user_id: int, user: UserUpdate):
    db_user = db.query(User).filter(User.id == user_id).first()
    if not db_user:
        return None

    if user.full_name is not None:
        db_user.full_name = user.full_name
    if user.password is not None:
        db_user.hashed_password = get_password_hash(user.password)

    db.commit()
    db.refresh(db_user)
    return db_user


# üëâ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def delete_user(db: Session, user_id: int):
    db_user = db.query(User).filter(User.id == user_id).first()
    if db_user:
        db.delete(db_user)
        db.commit()
        return True
    return False


# üëâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_user_role(db: Session, user_id: int, role_data: UpdateUserRole):
    db_user = db.query(User).filter(User.id == user_id).first()
    if not db_user:
        return None

    db_user.role = role_data.role
    db.commit()
    db.refresh(db_user)
    return db_user
